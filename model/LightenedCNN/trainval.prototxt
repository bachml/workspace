layer {
  name: 'data'
  type: 'Data'
  top: 'data'
  top: 'label'
  include {
    phase: TRAIN
 }
 transform_param {
   mean_value: 127.5
   mean_value: 127.5
   mean_value: 127.5
   scale: 0.0078125
   mirror: true
 }
 data_param {
   source: "/data/zeng/MsCeleb_256x256_train_lmdb"
   backend: LMDB
   batch_size : 64
  }
}
layer {
  name: 'data'
  type: 'Data'
  top: 'data'
  top: 'label'
  include {
    phase: TEST
 }
 transform_param {
   mean_value: 127.5
   mean_value: 127.5
   mean_value: 127.5
   scale: 0.0078125
   mirror: true
 }
 data_param {
   source: "/data/zeng/MsCeleb_256x256_val_lmdb"
   backend: LMDB
   batch_size : 20
  }
}
layer {
  name: "conv1"
  bottom: "data"
  top: "conv1"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 5
    stride: 2
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice1"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv1"
  top: "slice1_1"
  top: "slice1_2"
}
layer {
  name: "eltwise1"
  bottom: "slice1_1"
  bottom: "slice1_2"
  top: "eltwise1"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "pool1"
  bottom: "eltwise1"
  top: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2a"
  bottom: "pool1"
  top: "conv2a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 96
    kernel_size: 1
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice2a"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv2a"
  top: "slice2a_1"
  top: "slice2a_2"
}
layer {
  name: "eltwise2a"
  bottom: "slice2a_1"
  bottom: "slice2a_2"
  top: "eltwise2a"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "conv2"
  bottom: "eltwise2a"
  top: "conv2"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 192
    kernel_size: 3
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice2"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv2"
  top: "slice2_1"
  top: "slice2_2"
}
layer {
  name: "eltwise2"
  bottom: "slice2_1"
  bottom: "slice2_2"
  top: "eltwise2"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "pool2"
  bottom: "eltwise2"
  top: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3a"
  bottom: "pool2"
  top: "conv3a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 192
    kernel_size: 1
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice3a"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv3a"
  top: "slice3a_1"
  top: "slice3a_2"
}
layer {
  name: "eltwise3a"
  bottom: "slice3a_1"
  bottom: "slice3a_2"
  top: "eltwise3a"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "conv3"
  bottom: "eltwise3a"
  top: "conv3"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 3
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice3"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv3"
  top: "slice3_1"
  top: "slice3_2"
}
layer {
  name: "eltwise3"
  bottom: "slice3_1"
  bottom: "slice3_2"
  top: "eltwise3"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "pool3"
  bottom: "eltwise3"
  top: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4a"
  bottom: "pool3"
  top: "conv4a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 1
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice4a"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv4a"
  top: "slice4a_1"
  top: "slice4a_2"
}
layer {
  name: "eltwise4a"
  bottom: "slice4a_1"
  bottom: "slice4a_2"
  top: "eltwise4a"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "conv4"
  bottom: "eltwise4a"
  top: "conv4"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice4"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv4"
  top: "slice4_1"
  top: "slice4_2"
}
layer {
  name: "eltwise4"
  bottom: "slice4_1"
  bottom: "slice4_2"
  top: "eltwise4"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "conv5a"
  bottom: "layer{
  name: "slice4"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv4"
  top: "slice4_1"
  top: "slice4_2"
}
layer {
  name: "eltwise4"
  bottom: "slice4_1"
  bottom: "slice4_2"
  top: "eltwise4"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
"
  top: "conv5a"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 1
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice5a"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv5a"
  top: "slice5a_1"
  top: "slice5a_2"
}
layer {
  name: "eltwise5a"
  bottom: "slice5a_1"
  bottom: "slice5a_2"
  top: "eltwise5a"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "conv5"
  bottom: "eltwise5a"
  top: "conv5"
  type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 1
    pad: 1
    group: 1
    weight_filler { type: "xavier" std: 0.010 }
    bias_filler { type: "constant" value: 0 }
    #engine: CAFFE
  }
}
layer{
  name: "slice5"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "conv5"
  top: "slice5_1"
  top: "slice5_2"
}
layer {
  name: "eltwise5"
  bottom: "slice5_1"
  bottom: "slice5_2"
  top: "eltwise5"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "pool4"
  bottom: "eltwise5"
  top: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "pool4"
  top: "fc"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
     num_output: 512
     weight_filler { type: "xavier" std: 0.010 }
     bias_filler { type: "constant" value: 0 }
  }
}
layer{
  name: "slicefc"
  type:"Slice"
  slice_param {
	slice_dim: 1
  }
  bottom: "fc"
  top: "slicefc_1"
  top: "slicefc_2"
}
layer {
  name: "eltwisefc"
  bottom: "slicefc_1"
  bottom: "slicefc_2"
  top: "eltwisefc"
  type: "Eltwise"
  eltwise_param {
    operation: 2
  }
}
layer {
  name: "fc_class"
  type: "InnerProduct"
  bottom: "eltwisefc"
  top: "fc_class"
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 2 decay_mult: 0 }
  inner_product_param {
     num_output: 76544
     weight_filler { type: "xavier" std: 0.010 }
     bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "softmax_loss"
  type: "SoftmaxWithLoss"
  bottom: "fc6"
  bottom: "label"
  top: "softmax_loss"
  loss_weight: 1
}
